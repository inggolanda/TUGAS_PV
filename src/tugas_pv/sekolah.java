/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tugas_pv;

import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**z
 *
 * @author User
 */
public class sekolah extends javax.swing.JFrame {
    public Connection con;
    public Statement st;
    public ResultSet res;
    public DefaultTableModel model=new DefaultTableModel();
    private String tgl,valied;
    //public String idkota;
    public String idprov,idkota,idkec,getIdprov,getIdkota,getIdkecamatan,getIdkelurahan,wil,getidnama,namapegawai;
    ArrayList nama2 =new ArrayList();
    /**
     * Creates new form pemakaian
     */
    public sekolah(String namapegawai) {
        initComponents();
        this.namapegawai=namapegawai;
        ImageIcon ico = new ImageIcon("src/tugas_pv/img/iconpni.png");
        setIconImage(ico.getImage());
         model.addColumn("Id Sekolah");
         model.addColumn("Nama Sekolah");
         /*model.addColumn("Provinsi");
         model.addColumn("Kota");
         model.addColumn("Kecamatan");
         model.addColumn("Desa");
         */
         model.addColumn("Kontak");
         model.addColumn("Email");
         model.addColumn("Alamat");
         model.addColumn("Wilayah");
         model.addColumn("valid");
         tsekolah.setModel(model);
         /*kota.setSelectedItem("");
         kecamatan.setSelectedItem("");
         desa.setSelectedItem("");
        datacomboprovinsi();
       */
         namas();
         tampilkan();
        ///tampilkan2();
        jam();
        tgl();
        //auto();
        
       /* AutoCompleteDecorator.decorate(provinsi);
        AutoCompleteDecorator.decorate(kota);
        AutoCompleteDecorator.decorate(kecamatan);
        AutoCompleteDecorator.decorate(desa);*/
        if (y.isSelected()){
        valied="Valied";
    }
    else 
    {
        valied="Tidak valied";
    }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        cari = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tsekolah = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        alamat = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        Nama_sekolah = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        kontak = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        wilayah = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        y = new javax.swing.JRadioButton();
        n = new javax.swing.JRadioButton();
        idsekolah = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PT Pelatos Nasional Indonesia - Marketing");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(220, 54));
        setPreferredSize(new java.awt.Dimension(900, 900));

        jPanel1.setBackground(new java.awt.Color(245, 245, 245));

        jLabel12.setText("Kontak");

        jLabel13.setText("Alamat");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tugas_pv/img/savee.png"))); // NOI18N
        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tugas_pv/img/edite.png"))); // NOI18N
        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tugas_pv/img/clear.png"))); // NOI18N
        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tugas_pv/img/delet.png"))); // NOI18N
        jButton4.setText("Delet");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tugas_pv/img/cari.png"))); // NOI18N
        jButton5.setText("Cari");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        tsekolah.setAutoCreateRowSorter(true);
        tsekolah.setBackground(new java.awt.Color(176, 196, 222));
        tsekolah.setForeground(new java.awt.Color(51, 51, 51));
        tsekolah.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Kode Sekolah", "Nama Sekolah", "Kontak", "Email", "Wiliyah", "Alamat"
            }
        ));
        tsekolah.setGridColor(new java.awt.Color(255, 255, 255));
        tsekolah.setInheritsPopupMenu(true);
        tsekolah.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tsekolahMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tsekolah);

        jLabel10.setText("E-mail");

        jLabel1.setText(" ");

        jLabel2.setText(" ");

        alamat.setBackground(new java.awt.Color(173, 216, 230));
        alamat.setColumns(20);
        alamat.setForeground(new java.awt.Color(51, 204, 255));
        alamat.setRows(5);
        alamat.setBorder(null);
        alamat.setSelectedTextColor(new java.awt.Color(102, 204, 255));
        jScrollPane2.setViewportView(alamat);

        jLabel3.setText("Nama Sekolah");

        Nama_sekolah.setBackground(new java.awt.Color(173, 216, 230));
        Nama_sekolah.setOpaque(false);
        Nama_sekolah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Nama_sekolahActionPerformed(evt);
            }
        });
        Nama_sekolah.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Nama_sekolahKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Nama_sekolahKeyTyped(evt);
            }
        });

        email.setBackground(new java.awt.Color(173, 216, 230));

        kontak.setBackground(new java.awt.Color(173, 216, 230));
        kontak.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kontakMouseClicked(evt);
            }
        });
        kontak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kontakActionPerformed(evt);
            }
        });

        jLabel14.setText("Wilayah");

        wilayah.setBackground(new java.awt.Color(173, 216, 230));
        wilayah.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Wilayah", "Jabodetabek", "Surabaya", "Luar Jabodetabek", " " }));
        wilayah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wilayahActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("REVOLUTION", 0, 18)); // NOI18N
        jLabel4.setText("Sekolah");

        y.setText("Valied");
        y.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yActionPerformed(evt);
            }
        });

        n.setText("Non Valied");
        n.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nActionPerformed(evt);
            }
        });

        idsekolah.setEditable(false);
        idsekolah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idsekolahActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(195, 195, 195)
                .addComponent(jLabel1)
                .addGap(154, 154, 154)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(190, 190, 190))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(85, 85, 85)
                            .addComponent(wilayah, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel14)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10)
                                .addComponent(jLabel12))
                            .addGap(52, 52, 52)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(email, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                .addComponent(kontak))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idsekolah, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Nama_sekolah, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5)
                            .addComponent(jButton4)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(y)
                .addGap(70, 70, 70)
                .addComponent(n)
                .addGap(159, 159, 159))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Nama_sekolah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kontak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(wilayah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13)
                                .addComponent(idsekolah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(y, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(n, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton3)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton6.setText(" Back");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton6))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void idsekolahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idsekolahActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idsekolahActionPerformed

    private void nActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nActionPerformed
        valied="tidak valied";
        JOptionPane.showMessageDialog(null, valied);

    }//GEN-LAST:event_nActionPerformed

    private void yActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yActionPerformed
        valied="valied";
        JOptionPane.showMessageDialog(null, valied);
    }//GEN-LAST:event_yActionPerformed

    private void wilayahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wilayahActionPerformed
       wil = (String) wilayah.getSelectedItem();
        
    }//GEN-LAST:event_wilayahActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        //Utama n = new Utama();
        //n.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void tsekolahMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tsekolahMouseClicked
        int i = tsekolah.getSelectedRow();
        //DefaultTableModel model=new DefaultTableModel();
        if(i>-1){

            idsekolah.setText(model.getValueAt(i,0).toString());
            Nama_sekolah.setText(model.getValueAt(i,1).toString());
            wilayah.setSelectedItem(model.getValueAt(i,5).toString());
            kontak.setText(model.getValueAt(i,2).toString());
            email.setText(model.getValueAt(i,3).toString());
            alamat.setText(model.getValueAt(i, 4).toString());
            valied =(model.getValueAt(i,6).toString());
        }
        if(valied.equals("valied")){y.setSelected(true);n.setSelected(false);}
           else{n.setSelected(true);y.setSelected(false);
        }
    }//GEN-LAST:event_tsekolahMouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        cari();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        hapus();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        bersih();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       /* String nm=idsekolah.getText();
        try{
            PreparedStatement ps = null;
            Connection getConnection;
            getConnection = koneksi.getConnection();
            String sql2="select id_sekolah from sekolah where nama =? ";
            ps=getConnection.prepareStatement(sql2);
            if ( ps!=null )
            {
                ps.setString(1, nm);
                ResultSet res = ps.executeQuery();
                if (res.next()==true)
                {
                    getidnama =res.getString(1);
                    //JOptionPane.showMessageDialog(null,idkec);
                }
            }
        }

        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
        JOptionPane.showMessageDialog(null, getidnama);
*/
       JOptionPane.showMessageDialog(null, valied); 
       edit();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            save();
        } catch (SQLException ex) {
            Logger.getLogger(sekolah.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void Nama_sekolahKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Nama_sekolahKeyPressed
        
    }//GEN-LAST:event_Nama_sekolahKeyPressed

    private void Nama_sekolahKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Nama_sekolahKeyTyped
        
    }//GEN-LAST:event_Nama_sekolahKeyTyped

    private void Nama_sekolahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Nama_sekolahActionPerformed
        try{
             model.getDataVector().removeAllElements();
             model.fireTableDataChanged();
                Connection getConnection;
                getConnection = koneksi.getConnection();
                String sql = "Select * from sekolah where nama_sekolah like '%" + Nama_sekolah.getText() + "%'";
                res=st.executeQuery(sql);
                while (res.next()) {
                    
                    model.addRow(new Object[]{
                res.getString(1),
                res.getString(2),
                res.getString(3),
                res.getString(4),
                res.getString(5),
                res.getString(6),
                res.getString(7),
                     });
                    
                   /* idsekolah.setText(res.getString("id_sekolah"));
                    Nama_sekolah.setText(res.getString("nama_sekolah"));
                     kontak.setText(res.getString("kontak"));
                     email.setText(res.getString("email"));
                     wilayah.setSelectedItem(res.getString("wilayah").toString());
                     alamat.setText(res.getString("alamat"));*/
                     
                    
                }
        }catch (SQLException ex){
            tampilkan();
            tsekolah.setModel(model);
        }
    }//GEN-LAST:event_Nama_sekolahActionPerformed

    private void kontakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kontakActionPerformed
        tampilkan();
    }//GEN-LAST:event_kontakActionPerformed

    private void kontakMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kontakMouseClicked
        tsekolah.setModel(model);
    }//GEN-LAST:event_kontakMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sekolah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new sekolah("").setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Nama_sekolah;
    private javax.swing.JTextArea alamat;
    private javax.swing.JTextField cari;
    private javax.swing.JTextField email;
    private javax.swing.JTextField idsekolah;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField kontak;
    private javax.swing.JRadioButton n;
    private javax.swing.JTable tsekolah;
    private javax.swing.JComboBox<String> wilayah;
    private javax.swing.JRadioButton y;
    // End of variables declaration//GEN-END:variables

    private void tampilkan()
    {
     model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        try{
        st=koneksi.getConnection().createStatement();
             String sql = "select*from sekolah";
          
          
             
          res=st.executeQuery(sql);
          while(res.next()){
                model.addRow(new Object[]{
                res.getString(1),
                res.getString(2),
                res.getString(5),
                res.getString(6),
                res.getString(3),
                res.getString(4),
                res.getString(7),
                        });
                
         }
          
                tsekolah.setModel(model);
                
        }
        catch(SQLException e){
           JOptionPane.showMessageDialog(null, "Data GAGAL Di Tampilankan" , "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } 
}

    private void jam() {
ActionListener taskPerformer = (ActionEvent evt) -> {
    String nol_jam = "", nol_menit = "",nol_detik = "";
    java.util.Date dateTime = new java.util.Date();
    int nilai_jam = dateTime.getHours();
    int nilai_menit = dateTime.getMinutes();
    int nilai_detik = dateTime.getSeconds();
    if(nilai_jam <= 9) nol_jam= "0";
    if(nilai_menit <= 9) nol_menit= "0";
    if(nilai_detik <= 9) nol_detik= "0";
    String waktu = nol_jam + Integer.toString(nilai_jam);
    String menit = nol_menit + Integer.toString(nilai_menit);
    String detik = nol_detik + Integer.toString(nilai_detik);
    jLabel2.setText(waktu+":"+menit+":"+detik+"");
};
new Timer(1000, taskPerformer).start();
    }

    private void tgl() {
 java.util.Date skrg = new java.util.Date();
    java.text.SimpleDateFormat kal = new
    java.text.SimpleDateFormat("dd/MM/yyyy");
    jLabel1.setText(kal.format(skrg));
    }

    private void save() throws SQLException  {
        wil = (String) wilayah.getSelectedItem();
        if(Nama_sekolah.getText().trim().equals("")){
                    
            JOptionPane.showMessageDialog(null,"Maaf, Nama Sekolah belum di isi!");
            Nama_sekolah.requestFocus();
        }
        else if(kontak.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null,"Maaf, Kontak Sekolah belum di isi!");
            kontak.requestFocus();
        }
        else if(email.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null,"Maaf, Email Sekolah belum di isi!");
            email.requestFocus();
        }
        else if(alamat.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null,"Maaf, Alamat Sekolah belum di isi!");
            alamat.requestFocus();
        }
       else if(wilayah.getSelectedItem().equals("Pilih Wilayah")){
            JOptionPane.showMessageDialog(null,"Maaf,Lokasi Sekolah belum di isi!");
            wilayah.requestFocus();
        }
        else{
        
        try {
                Connection getConnection;
                getConnection = koneksi.getConnection();
                //String sql = "insert into sekolah values(null,'"+nama.getText()+"','"+getIdprov+"','"+getIdkota+"','"+getIdkecamatan+"','"+getIdkelurahan+"','"+alamat.getText()+"','"+wil+"','"+kontak.getText()+"','"+email.getText()+"','"+valied+"')";
                String sql = "insert into sekolah values(null,'"+Nama_sekolah.getText()+"','"+alamat.getText()+"','"+wil+"','"+kontak.getText()+"','"+email.getText()+"','"+valied+"','"+this.namapegawai+"')";
                PreparedStatement preparedStatement = getConnection.prepareStatement(sql);
                preparedStatement.execute();
                //int a=1;
                //relasikurang();

                JOptionPane.showMessageDialog(null, "Data BERHASIL tersimpan" , "Informasi", JOptionPane.INFORMATION_MESSAGE);
               
            } catch(SQLException e) {
                JOptionPane.showMessageDialog(null, "Data GAGAL tersimpan" , "Informasi", JOptionPane.INFORMATION_MESSAGE);
            }
            tampilkan();
            bersih();
        
        }
     
    }

    private void bersih() {
       idsekolah.setText("");
        Nama_sekolah.setText("");
         kontak.setText("");
         email.setText("");
         wilayah.setSelectedItem("Pilih Wilayah");
         cari.setText("");
         alamat.setText("");
    }

    private void hapus() {
        int ok=JOptionPane.showConfirmDialog(null,"Apakah Yakin Mendelete Data ini ini???", "Confirmation",JOptionPane.YES_NO_CANCEL_OPTION);
       if (ok==0)
       {
        try {
            
                Connection getConnection;
                getConnection = koneksi.getConnection();
                String sql ="delete from sekolah where nama_sekolah='"+Nama_sekolah.getText()+"'"; 
                PreparedStatement preparedStatement = getConnection.prepareStatement(sql);
                preparedStatement.execute();
                //relasinambah();
                JOptionPane.showMessageDialog(null, "Data BERHASIL  Terhapus" , "Informasi", JOptionPane.INFORMATION_MESSAGE);
               
            } catch(SQLException e) {
                JOptionPane.showMessageDialog(null, "Data GAGAL Di Hapus" , "Informasi", JOptionPane.INFORMATION_MESSAGE);
            }
        //tbl.removeAll();
          tampilkan();        
                bersih();
       
    }
    
    }

    
    private void edit() {
        
        try
             {Connection getConnection;
                getConnection = koneksi.getConnection();
                String sql="update sekolah set nama_sekolah ='"+Nama_sekolah.getText()+"',alamat='"+alamat.getText()+"',wilayah='"+wil+"',kontak='"+kontak.getText()+"',email='"+ email.getText()+"',valid='"+ valied+"',Nama_Pegawai='"+this.namapegawai+"' where id_sekolah='"+idsekolah.getText()+"'";
                //String sql="update master set kdbr,nmbr=?,jnbr=?,jmlbr=?,konbr=?lokbr=?,suplier=?,hargabr=?,ket=? where kdbr='"+kodebr.getText()+"'";
                PreparedStatement preparedStatement = getConnection.prepareStatement(sql);
                           preparedStatement.executeUpdate();
                             //relasikurang();
                             JOptionPane.showMessageDialog(null, wil);
                        JOptionPane.showMessageDialog(null,"Update Data Sukses");
                    }catch (SQLException e)
                    {
                        JOptionPane.showMessageDialog(null, "Update Data Gagal");
                    }
                tampilkan();
                bersih();
    }

    private void kon() throws SQLException {
        
          st=koneksi.getConnection().createStatement();
          String 
          sql1 = "select*from sekolah";
          res=st.executeQuery(sql1);
    }

    private void relasikurang() throws SQLException {
/*        //kon();
        st=koneksi.getConnection().createStatement();
             String sql1 = "select*from master where kdbr='"+ksekolah.getText()+"'";
          res=st.executeQuery(sql1);
          
          while(res.next()){
        String q1 = jmlbr.getText();
        String q2 = res.getString("jmlbr");
        int q11 =  Integer.parseInt(q1);
        int q22 = Integer.parseInt(q2);
        int q3 = q22 - q11;
        //JOptionPane.showMessageDialog(null, q11 );
        //JOptionPane.showMessageDialog(null, q22 );
        //JOptionPane.showMessageDialog(null, q3 );
        
        Connection getConnection;
                getConnection = koneksi.getConnection();
        String sql2="update master set jmlbr='"+ q3 +"'where kdbr='"+ksekolah.getText()+"'";
                PreparedStatement pr = getConnection.prepareStatement(sql2);
                pr.execute();    
          }
          
          }
*/}
    private void relasinambah() throws SQLException {

    }
    private void cari() {
 try
                    {
                        model.getDataVector().removeAllElements();
                        model.fireTableDataChanged();
                        Connection getConnection;
                getConnection = koneksi.getConnection();
                String sql = "Select * from sekolah where nama_sekolah like '%" + cari.getText() + "%'";
                
                res=st.executeQuery(sql);
                while (res.next()) {
                model.addRow(new Object[]{
                res.getString(1),
                res.getString(2),
                res.getString(5),
                res.getString(6),
                res.getString(3),
                res.getString(4),
                res.getString(7),
                
});
                
                tsekolah.setModel(model);
}                        

                        
                    }catch (SQLException e)
                    {
                        tampilkan();
                        JOptionPane.showMessageDialog(null, "Data Tidak Ditemukan");
                    }
                //table();
                bersih();
                

                
       
    }

    private void temukan() {
        /*
  try
                    {
                        //model.getDataVector().removeAllElements();
                        //model.fireTableDataChanged();
                        Connection getConnection;
                getConnection = koneksi.getConnection();
                String sql = "Select * from master where kdbr like '%" + ksekolah.getText() + "%'";
                
                res=st.executeQuery(sql);
                while (res.next()) {
                //model.addRow(new Object[]{
         //tgl.setDate(res.getDate("tgl"));
         //kdbr.setText(res.getString("kdbr"));
         //nopegawai.setText(res.getString("nopegawai"));
         nmbr.setText(res.getString("nmbr"));
         jnbr.setText(res.getString("jnbr"));
         jmlbr.setText(res.getString("jmlbr"));
         konbr.setSelectedItem(res.getString("konbr"));
         lokbr.setText(res.getString("lokbr"));
         //res.getString("suplier");
         //res.getString("hargabr");
         alamat.setText(res.getString("ket"));       
                
                
                
               
                
//});
                
                
}                        

                        
                    }catch (SQLException e)
                    {
                        JOptionPane.showMessageDialog(null, "Data Tidak Ditemukan");
                    }
                //table();
                //bersih();
                

    }

   // private void JOptionPane(String data_tidak_di_temukan) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    //}
*/
    }
/*        private void tampilkan2() {
model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        try{
        st=koneksi.getConnection().createStatement();
             String 
       sql1 = "select*from master";
          res=st.executeQuery(sql1);
          
          while(res.next()){
                model.addRow(new Object[]{
                res.getString("tgl"),
                res.getString("kdbr"),
                res.getString("nmbr"),
                res.getString("jnbr"),
                res.getString("jmlbr"),
                res.getString("lokbr"),
                res.getString("konbr"),
                res.getString("ket")
                        });
         }
                
                
        }
        catch(SQLException e){
           JOptionPane.showMessageDialog(null, "Data GAGAL Di Ta" , "Informasi", JOptionPane.INFORMATION_MESSAGE);
        }
         tsekolah.setModel(model);
    }
*/
    private void namas() {
        try{
            Connection getConnection;
                getConnection = koneksi.getConnection();
                st = getConnection.createStatement();
                String sql="select*from sekolah";
                res=st.executeQuery(sql);
                //JOptionPane.showMessageDialog(null, res);
                while (res.next()) {
                    String name =res.getString("nama_sekolah");
                    nama2.add(name);
                }
               }
            
            
        
        catch(SQLException e){
        
        JOptionPane.showMessageDialog(null, e);
        
        }
        
    }

    private void auto(String kt) {
            String complete = "";
		int start =kt.length();
		int last = kt.length();
		int a;
		
		for(a=0;a<nama2.size();a++)
		{
			if(nama2.get(a).toString().startsWith(kt))
			{
				complete = nama2.get(a).toString();
				last = complete.length();
				break;
			}
		}
		if(last>start)
		{
			Nama_sekolah.setText(complete);
			Nama_sekolah.setCaretPosition(last);
			Nama_sekolah.moveCaretPosition(start);
		}
    }

    private void auto() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}

   /* private void datacomboprovinsi() {
        provinsi.setSelectedIndex(1);
        try{
            Connection getConnection;
                getConnection = koneksi.getConnection();
                st = getConnection.createStatement();
                String sql="select lokasi_nama from inf_lokasi where lokasi_kabupatenkota=00";
                res=st.executeQuery(sql);
                //JOptionPane.showMessageDialog(null, res);
                while (res.next()) {
                    String prov =res.getString("lokasi_nama");
                    provinsi.addItem(prov);
                }
               }
            
            
        
        catch(SQLException e){
        
        JOptionPane.showMessageDialog(null, e);
        
        }
        
        
    }

    private void datacombokota() {
      
        if( getIdprov == "Pilih Provinsi"){
           kota.removeItem("");
            //getId1=null;
            kota.setSelectedItem("Pilih Kota/Kabupaten");
        }else{
        try{
            //PreparedStatement ps1 = null;
            Connection getConnection;
                getConnection = koneksi.getConnection();
                st = getConnection.createStatement();
                String sql2="select lokasi_nama from inf_lokasi where lokasi_propinsi='"+idprov+"' AND lokasi_kecamatan=00  ";
                 //ps1=getConnection.prepareStatement(sql2);
                res=st.executeQuery(sql2);
                while (res.next()) {
                    
                    String kota1 =res.getString("lokasi_nama");
                    kota.addItem(kota1);
                }
               }
            
            
        
        catch(SQLException e){
        
        JOptionPane.showMessageDialog(null, e);
        
        }
      //JOptionPane.showMessageDialog(null, idprov);
      } 
    }

    private void datacombokec() {
        
        try{
            //PreparedStatement ps1 = null;
            Connection getConnection;
                getConnection = koneksi.getConnection();
                st = getConnection.createStatement();
                String sql1="select lokasi_nama from inf_lokasi where lokasi_kabupatenkota='"+idkota+"' AND lokasi_kelurahan=0000 ";
                 //ps1=getConnection.prepareStatement(sql2);
                res=st.executeQuery(sql1);
                while (res.next()) {
                    
                    String kec1 =res.getString("lokasi_nama");
                    kecamatan.addItem(kec1);
                    //JOptionPane.showMessageDialog(null, kec1);
                }
            }
        catch(SQLException e){
        
                JOptionPane.showMessageDialog(null, e);
        
            }
    }

    private void datacombodes() {
        try{
            //PreparedStatement ps1 = null;
            Connection getConnection;
                getConnection = koneksi.getConnection();
                st = getConnection.createStatement();
                String sql1="select lokasi_nama from inf_lokasi where lokasi_kecamatan='"+idkec+"' AND lokasi_kelurahan !=0000 ";
                 //ps1=getConnection.prepareStatement(sql2);
                res=st.executeQuery(sql1);
                while (res.next()) {
                    
                    String des1 =res.getString("lokasi_nama");
                    desa.addItem(des1);
                    //JOptionPane.showMessageDialog(null, kec1);
                }
            }
        catch(SQLException e){
        
                JOptionPane.showMessageDialog(null, e);
        
            }
    }
    }
    

    


    //private void relasinambah() {
  //      throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    //}
    
//}*/
//}