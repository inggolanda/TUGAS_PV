/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tugas_pv;

/**
 *
 * @author Inggo Landa (201643500634)
 */
import static groovy.xml.Entity.lt;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.mail.*;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import java.io.BufferedOutputStream;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import static javax.swing.text.html.HTML.Attribute.DATA;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import static org.apache.xmlbeans.impl.schema.StscState.end;
public class marketing extends javax.swing.JFrame {
    public Connection con;
    public Statement st;
    public ResultSet res,res1;
    public DefaultTableModel model=new DefaultTableModel();
    public String data,will,yes,iddata,idwill,idyes,sqlt,s,m,i,g,w,pto,To,SUBJECT,MESGE;

    
    /**
     * Creates new form marketing
     * @throws java.sql.SQLException
     */
    public marketing(){
        initComponents();
        ImageIcon ico = new ImageIcon("src/tugas_pv/img/iconpni.png");
        setIconImage(ico.getImage());
         model.addColumn("Id");
         model.addColumn("Nama");
         model.addColumn("Kontak");
         model.addColumn("Email");
         model.addColumn("Wilayah");
         model.addColumn("valid");
         tabel.setModel(model);
         
                        tgl();
                        jam();

    
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        database = new javax.swing.JComboBox<>();
        Wilayah = new javax.swing.JComboBox<>();
        aktif = new javax.swing.JComboBox<>();
        Subject = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        text = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PT Pelatos Nasional Indonesia - Marketing");

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        database.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Database", "Siswa", "Guru", "Sekolah", "Instansi", "Mitra" }));
        database.setOpaque(false);
        database.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                databaseActionPerformed(evt);
            }
        });

        Wilayah.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Wilayah", "Jabodetabek", "Surabaya", "Luar Jabodetabek", " " }));
        Wilayah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WilayahActionPerformed(evt);
            }
        });

        aktif.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Email", "Valied", "tidak valied" }));
        aktif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aktifActionPerformed(evt);
            }
        });

        Subject.setForeground(new java.awt.Color(204, 204, 204));
        Subject.setOpaque(false);

        text.setColumns(20);
        text.setRows(5);
        text.setOpaque(false);
        jScrollPane1.setViewportView(text);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Subjek");

        jLabel2.setFont(new java.awt.Font("REVOLUTION", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Marketing");

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nama", "Email", "No", "Validasi"
            }
        ));
        tabel.setGridColor(new java.awt.Color(51, 51, 51));
        tabel.setOpaque(false);
        jScrollPane2.setViewportView(tabel);

        jButton1.setText("EKSPORT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Kirim");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("      Back      ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel3.setText("jLabel3");

        jLabel4.setText("jLabel4");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(147, 147, 147)
                .addComponent(jLabel2)
                .addGap(117, 117, 117)
                .addComponent(jLabel4)
                .addGap(53, 53, 53)
                .addComponent(jButton4))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 179, Short.MAX_VALUE)
                        .addComponent(database, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Wilayah, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(aktif, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(167, 167, 167))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(204, 204, 204)
                            .addComponent(jLabel1)
                            .addGap(33, 33, 33)
                            .addComponent(Subject, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(191, 191, 191)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jButton1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton2))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aktif)
                    .addComponent(Wilayah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(database, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(664, 664, 664))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(161, 161, 161)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(9, 9, 9)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(181, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void databaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_databaseActionPerformed
        data = (String) database.getSelectedItem();
        if(data.equals("Pilih Database")){
            iddata=null;
        }else{
            iddata="1";
        }
        try {
            tampilkan();
            
        } catch (SQLException ex) {
            Logger.getLogger(marketing.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_databaseActionPerformed

    private void WilayahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WilayahActionPerformed
        will = (String) Wilayah.getSelectedItem();
        if(will.equals("Pilih Wilayah")){
            idwill=null;
        }else{
            idwill="1";
        }
        try {
            tampilkan();
            
        } catch (SQLException ex) {
            Logger.getLogger(marketing.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_WilayahActionPerformed

    private void aktifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aktifActionPerformed
        yes = (String) aktif.getSelectedItem();
        if(yes.equals("Pilih Email")){
            idyes=null;
        }else{
            idyes="1";
        }
        try {
            tampilkan();
            
        } catch (SQLException ex) {
            Logger.getLogger(marketing.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_aktifActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        try {
            sendMail();
            
        } catch (SQLException ex) {
            Logger.getLogger(marketing.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    @SuppressWarnings("empty-statement")
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 
       Export();
          /*finally {
            try {
                if (excelFos != null) {
                    excelFos.close();
                }
                if (excelBos != null) {
                    excelBos.close();
                }
                if (excelexport != null) {
                    excelexport.close();
                }
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }*/
        
   
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(marketing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(marketing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(marketing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(marketing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
               
                    new marketing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Subject;
    private javax.swing.JComboBox<String> Wilayah;
    private javax.swing.JComboBox<String> aktif;
    private javax.swing.JComboBox<String> database;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tabel;
    private javax.swing.JTextArea text;
    // End of variables declaration//GEN-END:variables
private void jam() {
ActionListener taskPerformer = (ActionEvent evt) -> {
    String nol_jam = "", nol_menit = "",nol_detik = "";
    java.util.Date dateTime = new java.util.Date();
    int nilai_jam = dateTime.getHours();
    int nilai_menit = dateTime.getMinutes();
    int nilai_detik = dateTime.getSeconds();
    if(nilai_jam <= 9) nol_jam= "0";
    if(nilai_menit <= 9) nol_menit= "0";
    if(nilai_detik <= 9) nol_detik= "0";
    String waktu = nol_jam + Integer.toString(nilai_jam);
    String menit = nol_menit + Integer.toString(nilai_menit);
    String detik = nol_detik + Integer.toString(nilai_detik);
    jLabel4.setText(waktu+":"+menit+":"+detik+"");
};
new Timer(1000, taskPerformer).start();
    }

    private void tgl() {
 java.util.Date skrg = new java.util.Date();
    java.text.SimpleDateFormat kal = new
    java.text.SimpleDateFormat("dd/MM/yyyy");
    jLabel3.setText(kal.format(skrg));
    }
    private void tampilkan() throws SQLException {
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        
        s="Sekolah";
        m="Mitra";
        w="Siswa";
        g="Guru";
        i="Instansi";
        
        //query();
        try{
            st=koneksi.getConnection().createStatement();
            
          if(data.equals(s)){          
              String sqlt = "select*from sekolah";
              //String print = "select email from sekolah";
              res=st.executeQuery(sqlt);
              //res1=st.executeQuery(print);
              
            if(idyes!=null){
                JOptionPane.showMessageDialog(null, yes);
                  String sqlt1="select*from sekolah where valid='"+yes+"'";
                  //String print1="select email from sekolah where valid='"+yes+"'";
                  res=st.executeQuery(sqlt1);
                  //res1=st.executeQuery(print1);
            }
            else if(idwill!=null){
                
                  String sqlt2="select*from sekolah where wilayah='"+will+"'";
                  //String print2="select email from sekolah where wilayah='"+will+"'";
                  res=st.executeQuery(sqlt2);
                  //res1=st.executeQuery(print2);
                  if(idyes!=null){
                
                  String sqlt1="select*from sekolah where wilayah='"+will+"&& valid='"+yes+"'";
                  //String print3="select email from sekolah where wilayah='"+will+"&& valid='"+yes+"'";
                  res=st.executeQuery(sqlt1);
                  //res1=st.executeQuery(print3);
                }
            }
              
          while(res.next()){
                model.addRow(new Object[]{
                res.getString("id_sekolah"),
                res.getString("nama_sekolah"),
                res.getString("kontak"),
                res.getString("email"),
                res.getString("wilayah"),
                res.getString("valid"),
                
                        });
         }
          }else if(data.equals(m)){
              //JOptionPane.showMessageDialog(null, data);
              sqlt = "select*from mitra";
              res=st.executeQuery(sqlt);
              if(idyes!=null){
                
                  String sqlt1="select*from mitra where valid='"+yes+"'";
                  res=st.executeQuery(sqlt1);
            }
                while(res.next()){
                model.addRow(new Object[]{
                res.getString("id_mitra"),
                res.getString("nama_mitra"),
                res.getString("kontak"),
                res.getString("email"),
                "",
                res.getString("valid")
                        
                        });
         }
          }else if(data.equals(g)){
              //JOptionPane.showMessageDialog(null, data);
              sqlt = "select*from guru";
              res=st.executeQuery(sqlt);
              if(idyes!=null){
                
                  String sqlt1="select*from guru where valid='"+yes+"'";
                  res=st.executeQuery(sqlt1);
            }
                while(res.next()){
                model.addRow(new Object[]{
                res.getString("id_guru"),
                res.getString("nama_guru"),
                res.getString("kontak"),
                res.getString("email"),
                "",
                res.getString("valid")
                        
                        });
         }
          }else if(data.equals(i)){
              //JOptionPane.showMessageDialog(null, data);
              //if(iddata!=null){
              sqlt = "select*from instansi";
              res=st.executeQuery(sqlt);
              if(idyes!=null){
                
                  String sqlt1="select*from instansi where valid='"+yes+"'";
                  res=st.executeQuery(sqlt1);
            }
              
              //res=st.executeQuery(sqlt);
                while(res.next()){
                model.addRow(new Object[]{
                res.getString("id_instansi"),
                res.getString("nama_instansi"),
                res.getString("kontak"),
                res.getString("email"),
                "",
                res.getString("Valid")
                        
                        });
         }
          }else if(data.equals(w)){
              //JOptionPane.showMessageDialog(null, data);
              sqlt = "select*from siswa";
              res=st.executeQuery(sqlt);
              if(idyes!=null){
                
                  String sqlt1="select*from siswa where valid='"+yes+"'";
                  res=st.executeQuery(sqlt1);
            }
                while(res.next()){
                model.addRow(new Object[]{
                res.getString("NIS"),
                res.getString("nama"),
                res.getString("kontak"),
                res.getString("email"),
                "",
                res.getString("valid")
                        
                        });
         }
          }
        
          
        } 
        
        //}
                
                
        
        catch(SQLException e){
          
           JOptionPane.showMessageDialog(null, "Data GAGAL Di Tampilankan" , "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } 
        tabel.setModel(model);
    }

    private void query() throws SQLException {
        
    }

    private String sendMail() throws SQLException {
        
            String v="Valied";
            String vt="Tidak valied";
            st=koneksi.getConnection().createStatement();
        
       if(data.equals(s)){          
              String print = "select*from sekolah";
              //String print = "select email from sekolah";
              //res=st.executeQuery(print);
              res1=st.executeQuery(print);
              
            if(idyes!=null){
                JOptionPane.showMessageDialog(null, yes);
                  //String sqlt1="select*from sekolah where valid='"+yes+"'";
                  String print1="select email from sekolah where valid='"+yes+"'";
                  res1=st.executeQuery(print1);
                  //res1=st.executeQuery(print1);
            }
            else if(idwill!=null){
                
                  //String sqlt2="select*from sekolah where wilayah='"+will+"'";
                  String print2="select email from sekolah where wilayah='"+will+"'";
                  //res=st.executeQuery(sqlt2);
                  res1=st.executeQuery(print2);
                  if(idyes!=null){
                
                  //String sqlt1="select*from sekolah where wilayah='"+will+"&& valid='"+yes+"'";
                  String print3="select email from sekolah where wilayah='"+will+"&& valid='"+yes+"'";
                  //res=st.executeQuery(sqlt1);
                  res1=st.executeQuery(print3);
                }
            }
          }else if(data.equals(m)){
              //JOptionPane.showMessageDialog(null, data);
              String print = "select*from mitra";
              res1=st.executeQuery(print);
              if(idyes!=null){
                
                  String print1="select*from mitra where valid='"+yes+"'";
                  res1=st.executeQuery(print1);
                }
          }else if(data.equals(g)){
              //JOptionPane.showMessageDialog(null, data);
              String print2 = "select*from guru";
              res1=st.executeQuery(print2);
              if(idyes!=null){
                
                  String print3="select*from guru where valid='"+yes+"'";
                  res1=st.executeQuery(print3);
            }
          }else if(data.equals(i)){
              //JOptionPane.showMessageDialog(null, data);
              //if(iddata!=null){
              String print = "select*from instansi";
              res1=st.executeQuery(print);
              if(idyes!=null){
                
                  String print1="select*from instansi where valid='"+yes+"'";
                  res1=st.executeQuery(print1);
            
            }
          }else if(data.equals(w)){
              //JOptionPane.showMessageDialog(null, data);
              String print = "select*from siswa";
              res1=st.executeQuery(print);
              if(idyes!=null){
                
                  String print1="select*from siswa where valid='"+yes+"'";
                  res1=st.executeQuery(print1);
            }
                
         
          }
        boolean var;
        while(res1.next()){
         To=res1.getString("email");
         JOptionPane.showMessageDialog(null, To);
         SUBJECT=Subject.getText();
         MESGE=text.getText();
       // String Msg;
    
        final String email = "inggo250597@gmail.com";
        final String password = "samuhsamuh";

        Properties props = new Properties();
        props.put("mail.smtp.auth", true);
        props.put("mail.smtp.starttls.enable", true);
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");
        props.setProperty("mail.smtp.ssl.trust", "smtp.gmail.com");

        Session session = Session.getInstance(props, new javax.mail.Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(email, password);
            }
        });

        try {

            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(email));//ur email
            message.setRecipients(Message.RecipientType.TO,
                    InternetAddress.parse(To));//u will send to
            message.setSubject(SUBJECT);
            message.setText(MESGE);
            Transport.send(message);
            //Msg="true";
            var=true;
            JOptionPane.showMessageDialog(this,"Email Send Successfull !");
    	    //return Msg;
            
            

        } catch (Exception e) {
            
            JOptionPane.showMessageDialog(null, "Tidak Terkirim");
            
            if(data.equals(s)){
                Connection getConnection;
                getConnection = koneksi.getConnection();
                String ed="update sekolah set Valid ='"+vt+"'where email='"+To+"'";
                PreparedStatement preparedStatement = getConnection.prepareStatement(ed);
                           preparedStatement.executeUpdate();
                        JOptionPane.showMessageDialog(null,"Update Data Sukses");

            }else if(data.equals(m)){
                Connection getConnection;
                getConnection = koneksi.getConnection();
                String ed="update mitra set Valid ='"+vt+"'where email='"+To+"'";
                PreparedStatement preparedStatement = getConnection.prepareStatement(ed);
                           preparedStatement.executeUpdate();
                        JOptionPane.showMessageDialog(null,"Update Data Sukses");

            }else if(data.equals(g)){
                Connection getConnection;
                getConnection = koneksi.getConnection();
                String ed="update guru set Valid ='"+vt+"'where email='"+To+"'";
                PreparedStatement preparedStatement = getConnection.prepareStatement(ed);
                           preparedStatement.executeUpdate();
                        JOptionPane.showMessageDialog(null,"Update Data Sukses");
  
                
            }else if(data.equals(i)){
                Connection getConnection;
                getConnection = koneksi.getConnection();
                String ed="update instansi set Valid ='"+vt+"'";
                PreparedStatement preparedStatement = getConnection.prepareStatement(ed);
                           preparedStatement.executeUpdate();
                        JOptionPane.showMessageDialog(null,"Update Data Sukses");

            }else if(data.equals(w)){
                Connection getConnection;
                getConnection = koneksi.getConnection();
                String ed="update sekolah set Valid ='"+vt+"'where email='"+To+"'";
                PreparedStatement preparedStatement = getConnection.prepareStatement(ed);
                           preparedStatement.executeUpdate();
                        JOptionPane.showMessageDialog(null,"Update Data Sukses");

                
            }
            //return e.toString();
            
            
        }
        }
        return null;
        
        
    }
        
    public void export(){
   
        try{
    
            
    FileWriter out = new FileWriter("C:\\Users\\Authentic\\Desktop");
     BufferedWriter bw = new BufferedWriter(out);
     for(int e=0;e<model.getColumnCount();e++){
         bw.write(model.getColumnName(e)+"\t");
     }
     bw.write("\n");
     for(int o=0;o<model.getColumnCount();o++){
         for(int j =0;j<model.getColumnCount();j++){
         bw.write(model.getValueAt(o, j).toString()+"\t");
         }
      bw.write("\n");
     }
     bw.close();
     System.out.print("C:\\Users\\Authentic\\Desktop");
    
    
    }catch (Exception e) {
    JOptionPane.showMessageDialog(null, "coba lagi");
}
}

    private void Export() {
        FileOutputStream excelFos ;
        XSSFWorkbook excelexport ;
        try {
 
            
            JFileChooser excelFileChooser = new JFileChooser("C:\\Users\\Authentic\\Desktop");
            excelFileChooser.setDialogTitle("Save As ..");
            FileNameExtensionFilter fnef = new FileNameExtensionFilter("Files", "xls", "xlsx", "xlsm");
            excelFileChooser.setFileFilter(fnef);
            int chooser = excelFileChooser.showSaveDialog(null);
            if (chooser == JFileChooser.APPROVE_OPTION) {
               
                excelexport = new XSSFWorkbook();
                XSSFSheet  Esheet = excelexport.createSheet(data);
                
                for(int e = 0; e<model.getRowCount();e++){
                    XSSFRow Erow = Esheet.createRow(e+1);
                    for(int j = 0; j<model.getColumnCount();j++){
                        XSSFCell Ecell = Erow.createCell(j);
                        
                        //Ecell.setCellValue(model.getValueAt(e, j).toString());
                          Ecell.setCellValue(model.getValueAt(e, j).toString());
                    //JOptionPane.showMessageDialog(null,model.getValueAt(e, j).toString());     
                    }
                }
                
                String[] thead = {"Id","Nama","Kontak","Email","Wilayah","Valid"};
                int size = thead.length;
                for(int e = 0; e<1; e++){
                    XSSFRow Erow = Esheet.createRow(e);
                    for(int j = 0; j<size;j++){
                        XSSFCell Ecell = Erow.createCell(j);
                        Ecell.setCellValue(thead[j]);
                    }
                }
               
               // excelFos= new FileOutputStream("C:\\Users\\inggo\\Downloads\\workbook.xlsx");
                excelFos = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
                //excelBos = new BufferedOutputStream(excelFos);
                excelexport.write(excelFos);
                //excelexport.write(excelBos);
                JOptionPane.showMessageDialog(null, "Exported Successfully");
            }
 
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }
}
